(def start (now))

(def img (load-img (nth files)))
(def w img.w)
(def h img.h)

(defn h-stripe (cnvs width color)
  (def count (/ cnvs.h width 2))
  (for i (0 count)
    (def y (* i 2 width))
      (cnvs.rect 0 y cnvs.w width color)))

(defn v-stripe (cnvs width color)
  (def count (/ cnvs.w width 2))
  (for i (0 count)
    (def x (* i 2 width))
      (cnvs.rect x 0 width cnvs.h color)))

(def stripe-size (clamp 31 2 500))
(def blur-radius (clamp 8 0 100))

(def a (-> (Canvas.new w h)
           (fn (x) (x.fill 'white))
           (fn (x) (h-stripe x stripe-size 'black))
           (fn (x) (x.blur blur-radius))))

(def b (-> (Canvas.new w h)
           (fn (x) (x.fill 'white))
           (fn (x) (v-stripe x stripe-size 'black))
           (fn (x) (x.blur blur-radius))))


(view img)
(view a 0 (+ h 20))
(view b (+ w 20) (+ h 20))



(def mixer { :mode 'difference :opacity 1 })

(def blended
  (blend mixer.:mode (blend mixer.:mode img a mixer.:opacity) b mixer.:opacity))


# (blended.noise 30)
(blended.threshold 80)

(view blended (+ img.w 20) 0)
# (open-new blended)
(join "elapsed: " (- (now) start) " ms")